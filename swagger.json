{
    "openapi": "3.0.0",
    "info": {
        "title": "Graph RestAPI with NodeJS",
        "description": "University work for graphs using RestAPI and JWT, only for personal study",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "LocalHost running in your own computer"
        }
    ],
    "paths": {
        "/users/singin": {
            "post": {
                "summary": "Create a new User",
                "tags": ["Users"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "andrade-lucas-mo",
                                        "password": "secret-password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "409": {
                        "description": "user alredy exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "User Created"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "summary": "Login with a already created user",
                "tags": ["Users"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "name": "andrade-lucas-mo",
                                        "password": "secret-password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized login. Check your name and password"
                    },
                    "200": {
                        "description": "Login success"
                    }
                }
            }
        },
        "/citys/create": {
            "post": {
                "summary": "Create dataBase with cities name",
                "tags": ["Cities"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "citys": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/city"
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "citys": {
                                    "value": {
                                        "citys": [
                                            {
                                                "city": "São Paulo", 
                                                "lat": "-23.5500", 
                                                "lng": "-46.6333", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "São Paulo", 
                                                "capital": "admin", 
                                                "population": "23086000", 
                                                "population_proper": "12252023"
                                            }, 
                                            {
                                                "city": "Rio de Janeiro", 
                                                "lat": "-22.9111", 
                                                "lng": "-43.2056", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "Rio de Janeiro", 
                                                "capital": "admin", 
                                                "population": "12592000", 
                                                "population_proper": "6520000"
                                            }, 
                                            {
                                                "city": "Belo Horizonte", 
                                                "lat": "-19.9167", 
                                                "lng": "-43.9333", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "Minas Gerais", 
                                                "capital": "admin", 
                                                "population": "5328000", 
                                                "population_proper": "2502557"
                                            }, 
                                            {
                                                "city": "Brasília", 
                                                "lat": "-15.7939", 
                                                "lng": "-47.8828", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "Distrito Federal", 
                                                "capital": "primary", 
                                                "population": "3039444", 
                                                "population_proper": "3015268"
                                            }, 
                                            {
                                                "city": "Salvador", 
                                                "lat": "-12.9747", 
                                                "lng": "-38.4767", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "Bahia", 
                                                "capital": "admin", 
                                                "population": "2886698", 
                                                "population_proper": "2886698"
                                            }, 
                                            {
                                                "city": "Fortaleza", 
                                                "lat": "-3.7275", 
                                                "lng": "-38.5275", 
                                                "country": "Brazil", 
                                                "iso2": "BR", 
                                                "admin_name": "Ceará", 
                                                "capital": "admin", 
                                                "population": "2452185", 
                                                "population_proper": "2452185"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Cities Created"
                    }
                }
            }
        },
        "/citys": {
            "get": {
                "summary": "Get all cities Data",
                "tags": ["Cities"],
                "security": [{"bearerAuth": []}],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "citys": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/city"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/graph/create": {
            "post": {
                "summary": "Create dataBase with nodes between citys to form a graph",
                "tags": ["Graphs"],
                "security": [{"bearerAuth": []}],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Create a new graph base on citys"
                    }
                }
            }
        },
        "/graph/": {
            "get": {
                "summary": "Get nodes data",
                "tags": ["Graphs"],
                "security": [{"bearerAuth": []}],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get the complete graph data"
                    }
                }
            }
        },
        "/graph/{node}": {
            "get": {
                "summary": "Get nodes data",
                "tags": ["Graphs"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                        "name": "node",
                        "in": "path",
                        "required": true,
                        "description": "The node ID",
                        "examples": {
                            "nodeId": {
                                "value": 331
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get a specific node data"
                    }
                }
            }
        },
        "/graph/sub-graph": {
            "post": {
                "summary": "Create a subGraph based on nodes and edges ids",
                "tags": ["Graphs"],
                "security": [{"bearerAuth": []}],
                "requestBody":
                {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sub-graph"
                            },
                            "examples": {
                                "sub-graph": {
                                    "value": {
                                        "node": [331],
                                        "edges": [66, 77]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get the subgraph without the nodes and edges in the body"
                    }
                }
            }
        },
        "/search/breadth-first": {
            "get": {
                "summary": "Get a complete search on breadth first based on citys",
                "tags": ["Search"],
                "security": [{"bearerAuth": []}],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get a complete search on breadth first based on citys"
                    }
                }
            }
        },
        "/search/depth": {
            "get": {
                "summary": "Get a complete search on depth based on citys",
                "tags": ["Search"],
                "security": [{"bearerAuth": []}],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get a complete search on depth based on citys"
                    }
                }
            }
        },
        "/path/shortest": {
            "post": {
                "summary": "Shortest Path using Dijkstra method",
                "tags": ["Path"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shortest"
                            },
                            "examples": {
                                "user": {
                                    "value": {
                                        "initNode": 331,
                                        "endNode": 328
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Shortest Path using Dijkstra method"
                    }
                }
            }
        },
        "/forest/minimum-tree/{node}": {
            "get": {
                "summary": "Get Minimum tree by Prim method",
                "tags": ["Forest"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                        "name": "node",
                        "in": "path",
                        "required": true,
                        "description": "The node ID",
                        "examples": {
                            "nodeId": {
                                "value": 331
                            }
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized token"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "201": {
                        "description": "Get a Minimum tree by Prim method"
                    }
                }
            }
        }
    },
    
    "components": {
        "schemas": {
            "user": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "city": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "string"
                    },
                    "lng": {
                        "type": "string"
                    },
                    "admin_name": {
                        "type": "string"
                    }
                }
            },
            "sub-graph": {
                "type": "object",
                "properties": {
                    "node": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "edges": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "shortest": {
                "type": "object",
                "properties": {
                    "initNode": {
                        "type": "integer"
                    },
                    "endNode": {
                        "type": "integer"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}